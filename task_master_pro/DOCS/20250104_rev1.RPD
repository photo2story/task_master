# 업무 관리 앱 개발 기획서 (로그인 없는 버전)

## 1. 핵심 기능 (Phase 1)

### 프로젝트 관리
- CSV 파일 임포트/익스포트
- 프로젝트 생성/수정/삭제
- 프로젝트별 할 일 그룹화

### 할 일(To-Do) 관리
- 할 일 추가, 수정, 삭제
- 우선순위 설정
- 마감 기한 설정

### 기본 캘린더
- 월간 캘린더 뷰
- 할일 표시
- 간단한 필터링

## 2. 확장 기능 (Phase 2)

### 프로젝트 자동화
- 프로젝트 네이밍 자동화
- 업무절차 기반 할일 생성
- 간단한 리소스 관리

### 구성원 관리
- 담당자/관리자 지정
- 기본적인 역할 구분
- 간단한 업무 할당

## 3. 기술 스택
- 프론트엔드: Flutter (Dart)
- 로컬 저장소: SQLite
- 데이터 포맷: CSV 지원

## 4. 주요 화면 구성

### 대시보드
- 진행중인 프로젝트 목록
- 오늘의 할 일
- 간단한 캘린더 위젯

### 프로젝트 화면
- 프로젝트 속성 표시
- 할 일 목록
- 담당자 정보

### 캘린더 화면
- 월간 일정 보기
- 할 일 표시
- 간단한 필터링

## 대시보드 상세 설계

### 1. 레이아웃 구성

#### 화면 구조
```
+------------------+------------------+
|     헤더 영역    |                  |
+------------------+      캘린더      |
| 프로젝트 목록    |      위젯        |
|                  |                  |
+------------------+------------------+
|    오늘의 할일   |    빠른 입력     |
|                  |     위젯         |
+------------------+------------------+
```

### 2. Flutter 구현 상세

#### 기본 구조
```dart
lib/
├── main.dart
├── screens/
│   ├── dashboard_screen.dart
│   ├── project_screen.dart
│   └── calendar_screen.dart
├── widgets/
│   ├── project_list_widget.dart
│   ├── calendar_widget.dart
│   ├── today_tasks_widget.dart
│   └── quick_input_widget.dart
├── models/
│   ├── project.dart
│   └── task.dart
└── services/
    ├── database_service.dart
    └── csv_service.dart
```

#### 주요 위젯 구현

##### DashboardScreen
```dart
class DashboardScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Task Master'),
        actions: [
          IconButton(icon: Icon(Icons.file_upload), onPressed: _importCsv),
          IconButton(icon: Icon(Icons.add), onPressed: _createNewProject),
        ],
      ),
      body: DashboardLayout(),
    );
  }
}
```

##### ProjectListWidget
```dart
class ProjectListWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Card(
      child: Column(
        children: [
          HeaderSection('진행중인 프로젝트'),
          ProjectListView(),
        ],
      ),
    );
  }
}
```

### 3. 데이터 모델

#### Project 모델
```dart
class Project {
  final String id;
  final String year;
  final String category;
  final String subCategory;
  final String detail;
  final String manager;
  final String supervisor;
  final List<Task> tasks;
  
  String get fullName => 
    '${year}_${category}_${subCategory}_${detail}';
}
```

#### Task 모델
```dart
class Task {
  final String id;
  final String projectId;
  final String title;
  final String description;
  final DateTime dueDate;
  final String assignee;
  final TaskPriority priority;
  bool isCompleted;
}
```

### 4. CSV 연동

#### CSV 서비스
```dart
class CsvService {
  Future<List<Project>> importFromCsv(String path) async {
    final file = File(path);
    final lines = await file.readAsLines();
    return lines.map((line) => Project.fromCsv(line)).toList();
  }
  
  Future<void> exportToCsv(List<Project> projects, String path) async {
    final file = File(path);
    final lines = projects.map((p) => p.toCsv()).toList();
    await file.writeAsString(lines.join('\n'));
  }
}
```

### 5. 필요한 패키지
```yaml
dependencies:
  flutter:
    sdk: flutter
  provider: ^6.0.0
  sqflite: ^2.0.0
  path: ^1.8.0
  table_calendar: ^3.0.0
  csv: ^5.0.0
  intl: ^0.17.0
```

### 6. 구현 우선순위

1. Phase 1 (핵심 기능)
   - 기본 레이아웃 구현
   - CSV 파일 임포트
   - 프로젝트 목록 표시
   - 기본 할일 관리

2. Phase 2 (기능 강화)
   - 캘린더 연동
   - 드래그 앤 드롭
   - 상세 검색/필터
   - CSV 익스포트

3. Phase 3 (최적화)
   - 성능 개선
   - UI/UX 개선
   - 에러 처리
   - 데이터 백업